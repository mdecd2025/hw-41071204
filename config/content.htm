<h1>About</h1>
<p>課程名稱: 協同產品設計實習 - Collaborative Product Design Practice</p>
<p>學員作業網站: <a href="https://mdecd2025.github.io/hw-41071204/content/index.html">https://mdecd2025.github.io/hw-41071204/content/index.html</a></p>
<p>學員作業倉儲: <a href="https://github.com/mdecd2025/hw-41071204">https://github.com/mdecd2025/hw-41071204</a></p>
<hr/>
<p>課程代號: cd2025</p>
<p>Teams 線上教學:</p>
<p style="padding-left: 30px;">以 "學號@nfu.edu.tw" 登入<span> </span><a href="https://login.microsoftonline.com/">https://login.microsoftonline.com/</a><span> </span>Office 365</p>
<p style="padding-left: 30px;">Teams 團隊代碼: <span>p5z4eku</span></p>
<hr/>
<p>課程評分:</p>
<p style="padding-left: 30px;">Homework (30%) - 每週至少提交兩次與課程進度有關的內容, 完成後填回自評表單</p>
<p style="padding-left: 30px;">Exam (40%) - 建立包含操作流程影片、心得以及提供檔案下載的網頁後填回自評表單</p>
<p style="padding-left: 30px;">Final Report (30%) - 利用網頁內容進行簡報並提交 pdf 格式書面報告, 完成後填回自評表單</p>
<h1>Tasks</h1>
<h2>Wink</h2>
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/cmsimde/static" data-varname="123" height="630" muted="true" width="1008">
<source src="./../downloads/123.mp4" type="video/mp4"/></video></div>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/Mh8rQcQo2ic?si=Uhf5RNXI9kKrFPHC" title="YouTube video player" width="560"></iframe></p><h2>task1</h2>
<p></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/LPSHnXHdkcU?si=h5jL-9c4gYXPlMqi" title="YouTube video player" width="560"></iframe></p><h3>list</h3>
<p>2b:</p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<p><span><a href="https://mdecd2025.github.io/hw-41071204/">學員網站連結</a> |<a href="https://github.com/mdecd2025/hw-41071204"> 學員倉儲連結</a></span></p>
<p>2b:</p>
<p><a href="https://mdecd2025.github.io/2b-g8/">g8 網站</a> | <a href="https://github.com/mdecd2025/2b-g8">g8 倉儲</a></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># 從  Brython 程式庫中的 browser 導入 html, 可用來輸出超文件內容
# 而所導入的 document 可以指向網頁中的特定 id 內容
from browser import html, document
# 建立 url 變數與網站中 2b 學員的學號與帳號資料 URL 網誌字串對應
url = "https://mde.tw/list/2b.txt"
# 利用 open() 物件中的 readlines() 方法, 取出網站中的資料並逐行放入數列中, 因此 data 的資料型別為數列
data = open(url).readlines()
# 進行資料查驗時, 印出 data 數列內容
#print(data)
# 因為學員資料中的第一列為標題, 因此有效資料從索引值 1 開始
all_stud = data[1:]
# 利用 len() 函式查驗 all_stud 數列有幾筆資料, 因為要與前後的字串併接, 因此利用 str() 將整數轉為字串
print("總共有 " + str(len(all_stud)) + "名學員")
# 利用 document[] 取得 id 為 "brython_div1" 的位置, 然後與 brython_div1 變數對應
brython_div1 = document["brython_div1"]
# 利用 Brython 的 "&lt;=" 特殊符號, 將右值帶有字串與超文件內容物件插入 brython_div1 變數所指定的位置
# 其中利用 html.A 建立 anchor 標註物件, 第一個變數為 anchor 字串, 第二個變數則為 hyper text reference
brython_div1 &lt;= "1. " + html.A("2b-g8", href="https://mdecd2025.github.io/2b-g8/")+ html.A("(repo)", href="https://github.com/mdecd2025/2b-g8")
# 利用 html.BR() 插入 break 標註
brython_div1 &lt;= html.BR()
brython_div1 &lt;= "2. " + html.A("41023215", href="https://mdecd2025.github.io/hw-41023215/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41023215")
brython_div1 &lt;= html.BR()
brython_div1 &lt;= "3. " + html.A("41023216", href="https://mdecd2025.github.io/hw-41023216/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41023216")
brython_div1 &lt;= html.BR()
brython_div1 &lt;= "4. " + html.A("41023213", href="https://mdecd2025.github.io/hw-41023213/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41023213")
brython_div1 &lt;= html.BR()
brython_div1 &lt;= "5. " + html.A("41071203", href="https://mdecd2025.github.io/hw-41071203/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41071203")
brython_div1 &lt;= html.BR()
brython_div1 &lt;= "6. " + html.A("41071204", href="https://mdecd2025.github.io/hw-41071204/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41071204")
brython_div1 &lt;= html.BR()
brython_div1 &lt;= "7. " + html.A("41071202", href="https://mdecd2025.github.io/hw-41071202/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41071202")
</pre>
<p></p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['./../cmsimde/static/','./../downloads/py/']});
}
</script>
<script type="text/python3">
from browser import document, html, ajax

def 成功(req):
    內容 = req.text
    行列表 = 內容.strip().split('\n')
    學員資料 = 行列表[1:]

    brython_div1 = document["brython_div1"]
    總人數 = len(學員資料)
    brython_div1 <= html.SPAN(f"總共有 {總人數} 名學員") + html.BR() + html.BR()

    for 索引, 學員 in enumerate(學員資料, start=1):
        處理學員(索引, 學員, brython_div1)

    brython_div1 <= html.BR() + html.HR() + html.BR()
    brython_div1 <= html.SPAN("小組連結：") + html.BR()
    添加小組連結(brython_div1)

def 失敗(req):
    print(f"失敗：{req.status}")

def 處理學員(索引, 學員, 容器):
    欄位 = 學員.strip().split('\t')
    學號 = 欄位[0].strip() if len(欄位) >= 1 else f"第 {索引} 位"
    github帳號 = 欄位[1].strip() if len(欄位) >= 2 else ''

    個人網站 = f"https://mdecd2025.github.io/hw-{學號}"
    網站連結 = html.A(f"{學號} 的網站", href=個人網站, target="_blank")

    if github帳號:
        github倉儲 = f"https://github.com/{github帳號}"
        倉儲連結 = html.A(f"{學號} 的倉儲", href=github倉儲, target="_blank")
    else:
        倉儲連結 = html.SPAN("沒東西")

    學員元素 = html.DIV()
    學員元素 <= html.SPAN(f"{索引}. ") + 網站連結 + " | " + 倉儲連結 + html.BR()
    容器 <= 學員元素

def 添加小組連結(容器):
    小組資訊 = [
        ("1. ", "2b-g1"),
        ("2. ", "2b-g2"),
        ("3. ", "2b-g3"),
        ("4. ", "2b-g4"),
        ("5. ", "2b-g5"),
        ("6. ", "2b-g6"),
        ("7. ", "2b-g7"),
        ("8. ", "2b-g8"),
        ("9. ", "2b-g9"),
        ("10. ", "2b-g10"),
    ]

    for 序號, 小組名稱 in 小組資訊:
        小組網站 = f"https://mdecd2025.github.io/{小組名稱}/"
        小組倉儲 = f"https://github.com/mdecd2025/{小組名稱}"
        小組連結 = html.A(小組名稱, href=小組網站)
        倉儲連結 = html.A("(repo)", href=小組倉儲)
        容器 <= 序號 + 小組連結 + " " + 倉儲連結 + html.BR()

資料 = "https://mde.tw/list/2b.txt"

ajax.get(資料, oncomplete=成功, onerror=失敗)
</script>
<div id="brython_div1"></div>
<h3>ipv6</h3>
<p><strong>IPv6 設定:</strong></p>
<p>IPv6 分配: 2001:288:6004:17:fff1:cd25:0000:b014<br/>gateway: 2001:288:6004:17::254<br/>dns server:<br/>2001:288:6004:17::3<br/>2001:b000:168::1</p>
<p><strong>第一步</strong></p>
<p>控制台更改ipv6位置</p>
<p><strong>第二步</strong></p>
<p><span>開啟 init.py 更改 IP</span></p>
<p><strong>第三步</strong></p>
<p>C:\&gt;cd tmp</p>
<p>C:\tmp&gt;cd 4</p>
<p>C:\tmp\4&gt;cms</p>
<p>複製網址(9441)</p>
<p><strong>第四步</strong></p>
<p>tri+c結束工作後C:\tmp\4&gt;start cmd</p>
<p><strong>第五步</strong></p>
<p>更改網址(8000)</p>
<p></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/ZjSZ-2IOk9Y?si=pBj9eZqyhvBNWN20" title="YouTube video player" width="560"></iframe></p><h2>task2</h2>
<p></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/ZoQK74CRxLE?si=qr8hwJAmamtbcXpt" title="YouTube video player" width="560"></iframe></p><h3>w3</h3>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import urllib.request

# 網址
url = "https://mde.tw/list/2a.txt"

# 下載資料
with urllib.request.urlopen(url) as response:
    # 直接讀取並按行分割，不需要使用 decode()
    data = response.read().splitlines()  # 這樣讀取已經是字串了，不需解碼

# 2a 學員的帳號資料
a_all_members = set(['41223154', '41271125', '41271158', '41271146', '41271131', 'CYG41223103', '41223102', '41023128', '41023137', '41223137', '41223157', '41223156', 'otakuyoyo', '41223141', '41223113', 'kim41223114', 'joeisme1208', '41223116', '41223144', '41223140', '41223143', '41223138', '41223134', '41223136', 'zhe41223118', 'Spirit0224', 'yuhao-08', '41223158', 'Ren911308', '41223150', 'Manto8', 'CYA41223106', 'yan21ed', 'Lin41223107', '41223133', 'hong41223129', '41223110', '41223147', 'Linjiahong41223125', 'CHN41223132', 'Yu-Fang-Hong', '41023111', 'yckaooooo', 'kolas911205', '41023105', '40932134', '41223104', 'yan41223101', '41223105', '41223153', '41223120', '41223152', 'G8People', 'WSE41223112', '41223146', '41223119'])

# 跳過第一行標題，並過濾出 GitHub 帳號不在 a_all_members 的學員
non_member_stud_nums = []

for line in data[1:]:  # 跳過標題行
    stud_num, stud_github = line.split("\t")  # 拆分學號與 GitHub 帳號
    if stud_github not in a_all_members:
        non_member_stud_nums.append(stud_num)

# 顯示結果
for stud_num in non_member_stud_nums:
    print(stud_num)
</pre>
<p><a href="https://mdecd2025.github.io/hw-41071204/content/Brython?src=https://gist.githubusercontent.com/41071204/4554dc2ce129e98316ec49c8dcc0a3bf/raw/9f0ae8f3a582813fd182f722cda9739d725658dd/%25E8%25AB%258B%25E5%2588%2597%25E5%2587%25BA%25E5%2590%2584%25E7%258F%25AD%25E7%259B%25AE%25E5%2589%258D%25E5%25B0%259A%25E6%259C%25AA%25E7%25B4%258D%25E5%2585%25A5%25E5%2588%2586%25E7%25B5%2584%25E7%259A%2584%25E5%25AD%25B8%25E5%2593%25A1%25E5%2590%258D%25E5%2596%25AE.py" title="請列出各班目前尚未納入分組的學員名單(2a)">請列出各班目前尚未納入分組的學員名單(2a)</a><br/><br/><br/><br/></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import urllib.request

# 設定 URL
url = "https://mde.tw/list/2b.txt"

# 下載並讀取資料
response = urllib.request.urlopen(url)
data = response.read().splitlines()  # 移除 decode，直接處理讀取的資料

# 跳過標題行，從第二行開始處理
all_stud = data[1:]

# 固定的 GitHub 帳號清單
b_all_members = [
    '41223251', '41223211', '41223245', '41223243', 'jjjay41223212', 'leeshaowei0716',
    '41223234', '41223209', '41223205', '41223201', '41223202', '41223208-hw', '41223216',
    '41223217', '41223248', 'emma0312', '41223242', '41223203', '41223144', '41223235',
    'RAY41223215', 'hyy41223228', '41223227', '41223206', '41223226-0', 'Cloud41223237',
    'Yujenchuang', '41223225', 'ljg41223220', 'supowen', 'jacky93111', '41223246', 'Liu41223244',
    '41223236', '41223219', '41271237', '41223249', '41223229', '41223224', '41223222',
    '41223231', 'linryan23', '41023114', '41223230', 'timluo123', 'CYC41223247', '41223218',
    'ych0227', '41023215', '41023216', '41023213', '41071203', '41071204', '41071202', 'c-ching',
    'YUN4', 'tseYU000', 'snowfall-killer', 'junpig10'
]

# 逐行處理學員資料
for i in all_stud:
    # 移除每行結尾的換行符號
    drop_n = i.strip()

    # 檢查該行是否為空行
    if not drop_n:
        continue

    # 用制表符分割學號與 GitHub 帳號
    stud = drop_n.split("\t")

    # 檢查該行是否包含足夠的欄位（至少2個欄位：學號與 GitHub 帳號）
    if len(stud) &lt; 2:
        print(f"格式錯誤: {drop_n}")
        continue

    stud_num = stud[0]
    stud_github = stud[1]

    # 如果 GitHub 帳號不在 b_all_members 中，印出學號
    if stud_github not in b_all_members:
        print(stud_num)
</pre>
<p><a href="https://mdecd2025.github.io/hw-41071204/content/Brython.html?src=https://gist.githubusercontent.com/41071204/4146204df02260b993fa9a1fb0d7dc8c/raw/a0f3977721e0690680b356d490aa2f564ae64e0d/%25E8%25AB%258B%25E6%258E%25A5%25E8%2591%2597%25E5%2588%2597%25E5%2587%25BA%25E7%259B%25AE%25E5%2589%258D%25E5%2590%2584%25E7%258F%25AD%25E5%25B0%259A%25E6%259C%25AA%25E7%25B4%258D%25E7%25B5%2584%25E7%259A%2584%25E5%25AD%25B8%25E5%2593%25A1%25E5%25AD%25B8%25E8%2599%259F(2b)" title="請接著列出目前各班尚未納組的學員學號(2b)">請接著列出目前各班尚未納組的學員學號(2b)</a></p>
<h2>task3</h2>
<p><br/><strong>solvespace建立連桿</strong></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/uwqoOaKgTm0?si=sl5OgKXWyTKRKBOE" title="YouTube video player" width="560"></iframe></p>
<p><strong>onshape 建立連桿</strong></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/jMOd9J6TFw0?si=qxFQsc9j3FOcKxI6" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p>直接轉檔的操作步驟</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/Z_7G9Z4xb8I?si=y5w_o-JdPpcYwOgK" title="YouTube video player" width="560"></iframe></p><h2>task4</h2>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/Z_7G9Z4xb8I?si=35DdC2JP5bTsoOzV" title="YouTube video player" width="560"></iframe></p><h3>W4</h3>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/jMOd9J6TFw0?si=VGxUM1D7fe7E3g5j" title="YouTube video player" width="560"></iframe></p><h3>W5</h3>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/14ttNUttUC4?si=ZtmwFxovXxp6qATl" title="YouTube video player" width="560"></iframe></p>
<h3>W6</h3>
<h2>task5</h2>
<h3>W7</h3>
<p>solvespace繪製籃球機影片</p>
<p></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/o-eJcMoRecU?si=JhO8BNrb4YTg2bcE" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p>onshape檔</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/wLnsGTj-rDM?si=fOjAGenQQyv9H3Zn" title="YouTube video player" width="560"></iframe></p><h2>task6</h2>
<h1>Homework</h1>
<p>作業 (30%)</p>
<p>HW1 (5%): <span style="background-color: #ffff00;">建立由 Box 組成的平面四連桿機構 Webots 模擬場景</span></p>
<p style="padding-left: 30px;">part1:</p>
<p style="padding-left: 60px;">請各學員在 USB 隨身碟或個人電腦上完成 cd2025 課程所需的可攜系統配置:</p>
<p style="padding-left: 90px;">下載 <a href="http://229.cycu.org/portable_wcm2025.7z">portable_wcm2025.7z</a> (330MB, 解開壓縮後 1.4GB)</p>
<p style="padding-left: 90px;"><a href="http://229.cycu.org/Webots_2025a.7z">Webots_2025a.7z</a> (1.5 GB, 解開後約為 2.9GB, 可單獨運作)</p>
<p style="padding-left: 90px;"><a href="http://229.cycu.org/Webots_2025a_web.7z">Webots_2025a_web.7z</a> (171 MB, 解開壓縮後約為 1GB, 必須連網運作)</p>
<p style="padding-left: 90px;"><a href="http://229.cycu.org/Blender4.2.7z">Blender4.2.7z</a></p>
<p style="padding-left: 30px;">part2:</p>
<p style="padding-left: 60px;">請各學員完成可攜程式系統配置後, 利用 Webots R2025a 中寬度與高度都為 0.1m 的 box 物件建立一個簡單的平面四連桿機構模擬場景.</p>
<p style="padding-left: 60px;">base (基座) 長度 1m, link1 長度 0.4m, link2 長度 0.6m, link3 長度 0.9m, 各轉軸均為 HingeJoint, joint1 旋轉速度設定為 1radian/sec.</p>
<p style="padding-left: 30px;">part3:</p>
<p style="padding-left: 60px;">模擬場景啟動後, 按下 s 鍵機構開始作動, 按下 p 鍵後機構暫停.</p>
<p style="padding-left: 30px;">參考資料:</p>
<p style="padding-left: 60px;"><a href="/downloads/cd2025_hw1_demo.7z">cd2025_hw1_demo.7z</a></p>
<p>HW2 (5%): <span style="background-color: #ffff00;">建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景</span></p>
<p style="padding-left: 30px;">各學員請利用 CAD 系統依據 HW1 的連桿尺寸與運動方式, 配置適當大小的旋轉軸以及基座後, 利用 Webots R2025a 完成一個簡單的平面四連桿機構模擬場景.</p>
<p style="padding-left: 30px;">參考資料:</p>
<p style="padding-left: 60px;"><a href="/downloads/fourbar_slvs.7z">fourbar_slvs.7z</a></p>
<p>HW3 (20%):<span style="background-color: #ffff00;">建立 Webots 桌上籃球遊戲機模擬系統</span></p>
<p style="padding-left: 30px;">請各分組利用CAD 系統建立一個能在電腦桌 (1600W X 700D X 740H mm) 上運作的投籃機構 (<a href="https://www.youtube.com/watch?v=LloG_Jn_TI0&amp;t=51s">參考影片</a>)後, 導入 Webots R2025a 套件, 建立一個能由使用者透過鍵盤按鍵操作, 且具備計分板的籃球遊戲機模擬系統.</p>
<p style="padding-left: 30px;">參考資料:</p>
<p>參考資料:</p>
<p style="padding-left: 30px;"><a href="/downloads/fourbar_ball_throwing_linkage.slvs">fourbar_ball_throwing_linkage.slvs</a></p>
<p style="padding-left: 30px;"><a href="/downloads/sixbar_ball_throwing_linkage.slvs">sixbar_ball_throwing_linkage.slvs</a></p>
<p style="padding-left: 30px;"><img alt="" height="264" src="/images/fourbar_ball_throwing_linkage.gif" width="400"/></p>
<h2>HW1</h2>
<p>HW1 (5%): <span style="background-color: #ffff00;">建立由 Box 組成的平面四連桿機構 Webots 模擬場景</span></p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW1 - 41071204</p>
<p><a href="/downloads/hw1.7z"></a><a href="/downloads/hw-1.7z">hw1.7z</a></p>
<p></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/5TL4Yfe7YHM?si=TfYXm-NBed97OvHN" title="YouTube video player" width="560"></iframe></p>
<p></p>
<ol>
<li>加入<span>robot</span></li>
<li>在<span>robot</span>底下的<span>children</span>建立兩個<span>HingeJoint(joint1</span>、<span>joint4)</span>、<span>solid(base)</span></li>
<li><span>solid(base)- children-Shape-geometry-Box(1 0.1 0.1)</span></li>
<li><span>HingeJoint(joint1)-Solid-children-pose- children-Shape-geometry-Box(0.4 0.1 0.1)</span></li>
<li><span>Shape- Appearance- Material- diffuseColir(1 0 0)</span></li>
<li><span>translation (Solid) -0.5 0 0 rotation(Solid) 0 0 1 1.5708</span></li>
<li><span>translation (pose) 0.2 0 0.1</span></li>
<li><span>HingeJoint(joint1)- HingeJointParameters-axis(0 0 1)-anchor(-0.5 0 0) </span></li>
<li><span>HingeJoint(joint1)-device- RotationalMotor</span>完成<span>link1</span></li>
<li><span>HingeJoint(joint2)-Solid-children-pose- children-Shape-geometry-Box(0.6 0.1 0.1)</span></li>
<li><span>Shape- Appearance- Material- diffuseColir(0 1 0)</span></li>
<li><span>translation (Solid) 0.4 0 0.1 rotation(Solid) 0 0 -1 1.047195307179586</span></li>
<li><span>translation (pose) 0.3 0 0.1 </span></li>
<li><span>HingeJoint(joint2)- HingeJointParameters-axis(0 0 1)-anchor(0.4 0 0) </span>完成<span>link2</span></li>
<li><span>HingeJoint(joint3)-Solid-children-pose- children-Shape-geometry-Box(0.9 0.1 0.1)</span></li>
<li><span>Shape- Appearance- Material- diffuseColir(0 0 1)</span></li>
<li><span>translation (Solid) 0.6 0 0 rotation(Solid) 0 0 -1 1.5</span></li>
<li><span>translation (pose) 0.42 0 0</span></li>
<li><span>HingeJoint(joint3)- HingeJointParameters-axis(0 0 1)-anchor(0.6 0 0) </span>完成<span>link3</span></li>
<li><span>boundingObject-pose-use-link1(translation 0.2 0 0.1)-physics- physics</span></li>
<li><span>boundingObject-pose-use-link2(translation 0.3 0 0.1)-physics- physics</span></li>
<li><span>boundingObject-pose-use-link3(translation 0.4 0 0)-physics- physics</span></li>
<li><span>HingeJoint(joint4)- SolidReference-link3</span></li>
<li><span>HingeJoint(joint4)- HingeJointParameters-axis(0 0 1)-anchor(0.5 0 0)</span></li>
<li><span>Controller- .empty4</span></li>
</ol><h2>HW2</h2>
<p>HW2 (5%): <span style="background-color: #ffff00;">建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景</span></p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW2 - 學員學號</p>
<p><a href="/downloads/hw2.7z">hw2.7z</a></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/oPSZxPDecIE?si=-DK0m-B--1RyV60r" title="YouTube video player" width="560"></iframe></p>
<p>操作過程</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/Z_7G9Z4xb8I?si=y5w_o-JdPpcYwOgK" title="YouTube video player" width="560"></iframe></p>
<ol>
<li>在<span>solvespace</span>裡畫好零件及架構圖<span>-</span>轉成<span>stl-</span>使用程式碼轉成<span>obj-</span>匯入<span>Blender</span></li>
<li>轉成<span>stl</span></li>
<li>使用程式碼轉成<span>obj</span></li>
<li>匯入<span>Blender</span>確認各零件名</li>
<li>打開<span>webot</span>加入<span>robot</span></li>
<li><span>robot- children</span>建立兩個<span>HingeJoint(joint1</span>、<span>joint4)</span>、<span>solid(base1</span>、<span>base2)</span></li>
<li><span>solid(base1)- children- Shape-Mesh</span></li>
<li><span>Shape- Appearance- Material- diffuseColir(0.8 0.8 1)</span>完成<span>base1</span></li>
<li><span>solid(base2)- children- Shape-Mesh</span></li>
<li><span>Shape- Appearance- Material- diffuseColir(0.8 0.8 1)</span>完成<span>base2</span></li>
<li><span>HingeJoint(joint1)- Solid-children- Shape-Mesh</span></li>
<li><span>Shape- Appearance- Material- diffuseColir(1 0 0)</span></li>
<li><span>HingeJoint(joint1)- HingeJointParameters-axis(0 0 1) </span></li>
<li><span>HingeJoint(joint1)-device- RotationalMotor</span>完成<span>link1</span></li>
<li><span>HingeJoint(joint2)- Solid-children- Shape-Mesh</span></li>
<li><span>Shape- Appearance- Material- diffuseColir(0 1 0)</span></li>
<li><span>HingeJoint(joint2)- HingeJointParameters-axis(0 0 1) -anchor(-0.162 0.3656 0) </span>完成<span>link2</span></li>
<li><span>HingeJoint(joint3)- Solid-children- Shape-Mesh</span></li>
<li><span>Shape- Appearance- Material- diffuseColir(0 0 1)</span></li>
<li><span>HingeJoint(joint3)- HingeJointParameters-axis(0 0 1) -anchor(0.3702 0.6429 0) </span>完成<span>link3</span></li>
<li><span>boundingObject-mesh- link1-physics- physics</span></li>
<li><span>boundingObject- mesh - link2-physics- physics</span></li>
<li><span>boundingObject- mesh - link3-physics- physics</span></li>
<li><span>HingeJoint(joint4)- SolidReference-link3</span></li>
<li><span>HingeJoint(joint4)- HingeJointParameters-axis(0 0 1)-anchor(1 0 0)</span></li>
<li><span>Controller- .empty4</span></li>
</ol><h2>HW3</h2>
<p>HW3 (20%):<span style="background-color: #ffff00;">建立 Webots 桌上籃球遊戲機模擬系統</span></p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW3 - 41071204</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/x_qz40iqYwc?si=lUKHx35mrrCx44OG" title="YouTube video player" width="560"></iframe></p>
<p>操作影片</p>
<p><a href="/downloads/hw3.7z">hw3.7z</a></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/fqWSNW83JxI?si=Gxa1-P0O7Yrwe_Mc" title="YouTube video player" width="560"></iframe></p><h1>Midterm</h1>
<p>本課程所繳交的期中成績為學員自評之學習期望成績.</p>
<p>期中考週的自評期望成績繳交流程:</p>
<ol>
<li>整理先前所完成的各週的進度、作業網頁內容以及心得</li>
<li>拍攝期中自評影片, 上傳至 Youtube 後, 以"<span style="background-color: #ffff00;">國立虎尾科技大學 - 機械設計工程系 - cd2025 期中自評- 學員學號</span>"為影片標題後嵌入本頁面中</li>
<li>回填期中自評表單</li>
<li>上傳學員期中成績</li>
</ol>
<p>各週進度:</p>
<p>W1新增倉儲與作業連結</p>
<p>W2更改網頁名稱及標題</p>
<p>W3 製作全班網站及倉儲和各組網站及倉儲</p>
<p>W4使用solvespace繪製零件，熟悉solvespace並用ShareX錄製影片；製作可攜</p>
<p>W5製作可攜，並用ShareX錄製影片以及後期上字幕</p>
<p>W6運用webots做出四連趕方塊並且讓其作動；並用ShareX錄製影片</p>
<p>W7列出各班為那組之學員學號 使用SSH協定執行作業倉儲的推送</p>
<p>W8先在solvespace繪製零件後發現轉進webots無法作動後再使用Onshape轉進webots並做出四連趕方塊並且讓其作動。讓電腦ipv6固定，並且可用8000開啟。</p>
<p>W9修正brython_div1不見的問題 新增期中自評內容 在solvespace繪製籃球機的零件</p>
<p>各週網頁內容:</p>
<p>W1新增倉儲與作業連結</p>
<p>W2更改網頁名稱及標題</p>
<p>W3 list全班學生&amp;班級小組網站與倉儲新增</p>
<p>W4增加Wink標籤 增加wink影片連結 影片上傳</p>
<p>W5影片上傳(有字幕版)</p>
<p>W6新增標題 新增W5影片 新增HW1影片 新增標題</p>
<p>W7新增w3內容 修改w3 新增task2內容</p>
<p>W8新增HW2內容 新增task4 新增ipv6 新增task3內容 新增影片至task3</p>
<p>W9 編輯wink 修正brython_div1不見的問題 新增期中自評內容</p>
<p>期中心得:</p>
<p>第一週還沒進入狀態時，感覺上課總是跟不上進度，加上第一次接觸github，所以更加不自信及手忙腳亂。前三週還要靠著同學及老師的幫忙才能一步一步的執行下去，所以進度慢了很多，第四週開始慢慢上手後，也在努力趕上教學進度，開始使用solvespace來繪製零件，一開始對這個軟體還不是很熟悉，慢慢摸索後發現跟之前使用的其他繪圖軟體相似也逐漸上手；webots這個軟體是從以前就沒有接觸過類似的，上網找教學影片即問老師後，才開始進入軌道；Onshape則是跟以前學過的繪圖軟體非常相似，所以上手非常容易。這堂課目前上下來我體會到人各有所長，同組裡像我就擅長繪圖，有人擅長打程式，有人很擅長解決問題，這可能就是除了上課內容之外，老師最希望我們體會以及學習到的知識吧。</p>
<p>期中自評影片:</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/X8LKLrATdpQ?si=WZ-rgiLIeGAcue05" title="YouTube video player" width="560"></iframe></p>
<h1>Exam</h1>
<p>Exam1 (10%): 建立 Webots 基本物件模擬場景</p>
<p style="padding-left: 30px;">各學員利用 Webots R2025a 套件中的 Shape 物件, 隨堂建立指定的機電系統模擬場景, 並利用 Python 程式進行互動控制.</p>
<p>Exam2 (10%): 利用 CAD 零組件建立模擬場景 </p>
<p style="padding-left: 30px;">各學員利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制.</p>
<p>Exam3 (20%): Webots 機電模擬場景的協同設計</p>
<p style="padding-left: 30px;">各分組利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制. 過程中各學員必須採同步協同模式, 維護從 Github Classroom 取得的分組協同倉儲以及網站.</p>
<p style="padding-left: 30px;">協同分組方式:</p>
<ol>
<li>分配學員負責利用 Solvespace 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁.</li>
<li>分配學員負責利用 NX2312 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁.</li>
<li>分配學員負責利用 Webots 建立機電系統模擬場景, 並利用 Python 程式進行控制, 過程中必須將建構過程拍成帶有說明字幕的影片上傳至分組網頁.</li>
</ol>
<h2>Exam1</h2>
<p>Exam1 (10%): 建立 Webots 基本物件模擬場景</p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam1 - 41071204</p>
<p><a href="/downloads/exam1.7z">exam1.7z</a></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/8hJ3klNMNig?si=8AIxqbE-s_S_n6Bl" title="YouTube video player" width="560"></iframe></p>
<ol>
<li>加入<span>robot</span></li>
<li>在<span>robot</span>底下的<span>children</span>建立兩個<span>HingeJoint(joint1</span>、<span>joint4)</span></li>
<li><span>HingeJoint(joint1)-Solid-children-pose- children-Shape-geometry-Box(0.4 0.1 0.1)</span></li>
<li><span>Shape- Appearance- Material- diffuseColir(1 0 0)</span></li>
<li><span>translation (Solid) -0.5 0 0.4 rotation(Solid) 0 0 1 0.06981320000000071</span></li>
<li><span>translation (pose) 0.2 0 0</span></li>
<li><span>HingeJoint(joint1)- HingeJointParameters-axis(0 0 1)-anchor(-0.5 0 0) </span></li>
<li><span>HingeJoint(joint1)-device- RotationalMotor</span>完成<span>link1</span></li>
<li><span>HingeJoint(joint2)-Solid-children-pose- children-Shape-geometry-Box(0.6 0.1 0.1)</span></li>
<li><span>HingeJoint(joint2)-Solid-children-pose- children-Shape-geometry-Box(0.3 0.1 0.1)</span></li>
<li><span>Shape- Appearance- Material- diffuseColir(0 1 0)</span></li>
<li><span>translation (Solid) 0.4 0 0.1 rotation(Solid) 0 0 1 1.57</span></li>
<li><span>translation (pose) 0.3 0 0 translation (pose) 0 0.15 0 rotation(pose) 0 0 1 1.57</span></li>
<li><span>HingeJoint(joint2)- HingeJointParameters-axis(0 0 1)-anchor(0.4 0 0) </span>完成<span>link2</span></li>
<li><span>HingeJoint(joint3)-Solid-children-pose- children-Shape-geometry-Box(0.9 0.1 0.1)</span></li>
<li><span>Shape- Appearance- Material- diffuseColir(0 0 1)</span></li>
<li><span>translation (Solid) 0.6 0 -0.1 rotation(Solid) 0 0 -1 2.4</span></li>
<li><span>translation (pose) 0.45 0 0</span></li>
<li><span>HingeJoint(joint3)- HingeJointParameters-axis(0 0 1)-anchor(0.6 0 0) </span>完成<span>link3</span></li>
<li><span>boundingObject-pose-use-link1(translation 0.2 0 0)-physics- physics</span></li>
<li><span>boundingObject-pose-use-link2(translation 0.3 0 0)-physics- physics</span></li>
<li><span>boundingObject-pose-use-link3(translation 0.45 0 0)-physics- physics</span></li>
<li><span>HingeJoint(joint4)- SolidReference-link3</span></li>
<li><span>HingeJoint(joint4)- HingeJointParameters-axis(0 0 1)-anchor(0.5 0 0)</span></li>
<li><span><span>Controller-fourbar_controller</span></span>
<p>心得 做<span>Exam1</span>時想說應該跟<span>HW1</span>很像，所以應該不難，但操作時發現有遇到一些難關，改位置時我常把<span>Solid</span>跟<span>pose</span>搞混，所以改完位置後會發現做動時會解體，改位置上可是花費了不少時間。</p>
<span></span></li>
</ol><h2>Exam2</h2>
<p>Exam2 (10%): 利用 CAD 零組件建立模擬場景</p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam2 - 學員學號</p>
<p><a href="/downloads/exam2.7z">exam2.7z</a></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/Sp5VBgJxtnE?si=BIt6z071wthZxnfy" title="YouTube video player" width="560"></iframe></p>
<ol>
<li>在<span>solvespace</span>裡畫好零件及架構圖<span>-</span>轉成<span>stl-</span>使用程式碼轉成<span>obj-</span>匯入<span>Blender</span></li>
<li>轉成<span>stl</span></li>
<li>使用程式碼轉成<span>obj</span></li>
<li>匯入<span>Blender</span>確認各零件名</li>
<li>打開<span>webot</span>加入<span>robot</span></li>
<li><span>robot- children</span>建立兩個<span>HingeJoint(joint1</span>、<span>joint4)</span>、<span>solid(base1</span>、<span>base2)</span></li>
<li><span>solid(base1)- children- Shape-Mesh</span></li>
<li><span>Shape- Appearance- Material- diffuseColir(1 0 0)</span>完成<span>base1</span></li>
<li><span>solid(base2)- children- Shape-Mesh</span></li>
<li><span>Shape- Appearance- Material- diffuseColir(0 1 0)</span>完成<span>base2</span></li>
<li><span>HingeJoint(joint1)- Solid-children- Shape-Mesh</span></li>
<li><span>Shape- Appearance- Material- diffuseColir(0 0 1)</span></li>
<li><span>HingeJoint(joint1)- HingeJointParameters-axis(0 0 1) </span></li>
<li><span>HingeJoint(joint1)-device- RotationalMotor</span>完成<span>link1</span></li>
<li><span>HingeJoint(joint2)- Solid-children- Shape-Mesh</span></li>
<li><span>Shape- Appearance- Material- diffuseColir(0 1 1)</span></li>
<li><span>HingeJoint(joint2)- HingeJointParameters-axis(0 0 1) -anchor(1.0375 0.0725 0) </span>完成<span>link2</span></li>
<li><span>HingeJoint(joint3)- Solid-children- Shape-Mesh</span></li>
<li><span>Shape- Appearance- Material- diffuseColir(1 1 0)</span></li>
<li><span>HingeJoint(joint3)- HingeJointParameters-axis(0 0 1) -anchor(0.723 1.5392 0) </span>完成<span>link3</span></li>
<li><span>boundingObject-mesh- link1-physics- physics</span></li>
<li><span>boundingObject- mesh - link2-physics- physics</span></li>
<li><span>boundingObject- mesh - link3-physics- physics</span></li>
<li><span>HingeJoint(joint4)- SolidReference-link3</span></li>
<li><span>HingeJoint(joint4)- HingeJointParameters-axis(0 0 1)-anchor(2 0 0)</span></li>
<li><span>Controller-fourbar_controller</span></li>
</ol>
<p>心得 做<span>Exam2</span>就沒有<span>Exam1</span>的問題了，因為<span>Exam2</span>是先在<span>solvespace</span>裡放置好各零件位置並直接轉過去，所以匯進<span>webot</span>時不需要去調每個零件的位置。但在一開始設計連桿時沒有注意到長度，所以做動時卡住了，調整後才能順利做動。</p><h2>Exam3</h2>
<p>Exam3 (20%): Webots 機電模擬場景的協同設計</p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3 - 41071204</p>
<p><span>Exam3-1</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/9qp164d4ak0?si=JH3i7zH9_qsmtMy5" title="YouTube video player" width="560"></iframe></p>
<ol>
<li>在控制台設好自己的<span>IPv6</span>網址</li>
<li>關掉<span>IPv4</span>網址</li>
<li>以<span> webotsw --stream </span>啟動個人所完成的<span> HW1 </span>模擬系統</li>
<li>查看各自<span>webots</span>的端口</li>
<li>在網頁上輸入<span>http:[</span>自己的<span>IPv6</span>網址<span>]:</span>查看各自<span>webots</span>的端口<span>/index.html</span></li>
<li>在<span>Connect to</span>內輸入<span>[</span>自己的<span>IPv6</span>網址<span>]: </span>查看各自<span>webots</span>的端口</li>
<li>按下<span>Connect</span>即可看到自己<span>webots</span>的畫面</li>
<li>按下<span>Disconnec</span></li>
<li>到<span>Connect to</span>內輸入<span>[</span>組員的<span>IPv6</span>網址<span>]: </span>組員<span>webots</span>的端口</li>
</ol>
<p>心得 剛開始操作<span>Exam3-1</span>時，摸不著頭緒，不知道該從哪裡下手，跟組員一起討論後有種茅塞頓開的感覺，原來是我把它想得太複雜了，理解如何操作後瞬間信心大漲，但後來要讓其他組員連我的時發現怎麼連都無法連上，才發現<span>webots</span>版本不一樣無法連到，趕快把自己的版本改成跟其他人一樣才順利連上。知道怎麼操作後和組員一起各種摸索及實驗後，才發現組員在<span>webots</span>上操作，我在網頁上都能看到並且我也能中斷，由此我也才認真了解何謂叫協同</p>
<p><span>Exam3-2</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/3X5jn2D5OsQ?si=cgRpaXCwlarp_a5S" title="YouTube video player" width="560"></iframe></p>
<ol>
<li>在控制台設好自己的<span>IPv6</span>網址</li>
<li>關掉<span>IPv4</span>網址</li>
<li>下載<span>7z </span></li>
<li>以<span> webotsw --stream </span>開啟</li>
<li>查看各自<span>webots</span>的端口</li>
<li>在程式碼處修改成各自的學號</li>
<li>在網頁上輸入<span>http:[</span>自己的<span>IPv6</span>網址<span>]:</span>查看各自<span>webots</span>的端口<span>/index.html</span></li>
<li>在<span>Connect to</span>內輸入<span>[</span>自己的<span>IPv6</span>網址<span>]: </span>查看各自<span>webots</span>的端口</li>
<li>按下<span>Connect</span>即可看到自己<span>webots</span>的畫面</li>
<li>按下<span>Disconnec</span></li>
<li>到<span>Connect to</span>內輸入<span>[</span>組員的<span>IPv6</span>網址<span>]: </span>組員<span>webots</span>的端口</li>
</ol>
<p>心得 <span>Exam3-2</span>跟<span>Exam3-1</span>差不多，所以操作上沒有太大的問題，修改七段顯示器的數字也沒有我想的複雜，跟<span>3-3</span>相比下<span>3-2</span>比較好完成。</p>
<p><span>Exam3-2</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/5nnQJnX1VEs?si=IBUu6A5qNCwiU6bw" title="YouTube video player" width="560"></iframe></p>
<ol>
<li>在控制台設好自己的<span>IPv6</span>網址</li>
<li>關掉<span>IPv4</span>網址</li>
<li>輸入<span>pip</span>確認安裝正確的<span>python</span></li>
<li>先執行<span>set WEBOTS_HOME=y:\Webots_2025a</span>指令 再執行<span>webots –stream</span></li>
<li>先執行指令<span>pip install websocket-client websocket-server keyboard</span></li>
<li>執行<span>python youbot_cart_client.py</span></li>
<li>查看各自<span>webots</span>的端口</li>
<li>在程式碼處修改成各自的學號</li>
<li>在網頁上輸入<span>http:[</span>自己的<span>IPv6</span>網址<span>]:</span>查看各自<span>webots</span>的端口<span>/index.html</span></li>
<li>在<span>Connect to</span>內輸入<span>[</span>組長的<span>IPv6</span>網址<span>]: </span>組長<span>webots</span>的端口</li>
<li>按下<span>Connect</span>即可看到組長<span>webots</span>的畫面</li>
<li>按下上下左右建即可操控</li>
</ol>
<p>心得 <span>Exam3-3</span>我們想很久，組員間也研究很久，後來問了有上過類似的客的學長後，才學會要如何完成這項作業。</p><h1>Final</h1>
<p><span>期末協同專案執行過程影片、簡報與 PDf 報告檔案 (六人一組) (30%)</span></p>
<p><span>題目: <span style="background-color: #ccffcc;">Webots 動態投籃模擬系統的協同設計</span></span></p>
<p><span>說明: </span></p>
<p style="padding-left: 30px;"><span>籃框架被配置在一定範圍內, 可隨機慢速前進、後退及左右擺動, 投籃機構系統帶有一定數量的籃球, 被配置在可自由移動的輪車上.</span></p>
<p style="padding-left: 30px;"><span>操作者可利用鍵盤特定按鍵控制投籃輪車的移動並發射投籃, 每投出一球後系統透過記分板進行計分, 並由送球機構進行補球或移動輪車取球, 遊戲可進行至全部數量籃球投完為止.</span></p>
<p>請將期末協同專案執行過程、內容與心得, 製作成影片，配合字幕上傳至 Youtube 後嵌入各階段的期末報告頁面中.</p>
<p>影片標題: <span style="background-color: #ffff00;">國立虎尾科技大學 - 機械設計工程系 - cd2025 期末報告 - 學員學號 - 各階段影片主題<br/></span></p>
<h1>Brython</h1>
<p><button id="add1to100">1 add to 100</button></p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>